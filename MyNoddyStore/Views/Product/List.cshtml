
@using MyNoddyStore.Entities
@model MyNoddyStore.Models.ProductsListViewModel
@Scripts.Render("~/Scripts/jquery-3.3.1.js")
@*@Scripts.Render("/Scripts/incrementing.js")*@
@{
    ViewBag.Title = "Products";
}
@foreach (var pr in Model.Products)
{
    @Html.Partial("ProductSummary", pr)
}
<div class="btn-group pull-right">
    @Html.PageLinks(Model.PagingInfo, x => Url.Action("List", new { category = Model.CurrentCategory, page = x }))
</div>

@*This script manipulates items on the page. Whereas it may seem more pertinent to add this script per ProductSummary form, in practice this causes 
    issues with multiple events being bound to the forms (one for each time a form is loaded) *@
<script type="text/javascript">
    var modelProducts; // initial products in cart                does this work ?? todo??
    var countdownVal;

    //$('.plus-btn').on('click', function (e) {
    //    e.preventDefault();
    //    var $this = $(this);
    //    var $input = $this.closest('div').find('input');
    //    var value = parseInt($input.val());

    //    if (value < 100) {
    //        value = value + 1;
    //    } else {
    //        value = 100;
    //    }

    //    $input.val(value);
    //});

    $('.plus-btn').on('click', function (e) {
        e.preventDefault();
        var $this = $(this);
        var $input = $this.closest('div').find('input');
        var value = parseInt($input.val());

        if (value < 100) {
            value = value + 1;
        } else {
            value = 100;
        }

        $input.val(value);
    });


    $('.minus-btn').on('click', function (e) {
        e.preventDefault();
        var $this = $(this);
        var $input = $this.closest('div').find('input');
        var value = parseInt($input.val());

        if (value > 1) {
            value = value - 1;
        } else {
            value = 0;
        }

        $input.val(value);

        ResetLocalUpdateButton($this);
    });


    //Set local Update button to be enabled/disabled as necessary.
    function ResetLocalUpdateButton(localElement) {
        var thisProdId = localElement.closest('div').siblings().children().find("input[name='ProductID']").val();

        //if current quantity differs from the original value, then the cart value needs to be updated
        var currentQuantity = parseInt(localElement.closest('div').find('input').val());
        var cartQuantity = modelProducts.filter(x => x.ProductID == thisProdId)[0].myQuantity;
        
        alert(countdownVal);
    }

    //For each update button on screen, set the initial state to disabled.
    function DisableAllUpdateButtons() {
        var buttons = document.getElementsByName("submitUpdate");
        var i;
        for (i = 0; i < buttons.length; i++) {
            //if (x[i].type == "checkbox") {
            //    x[i].checked = true;
            //}
            buttons[i].disabled = true;
        }
    }

    //For each minus button, disable it if current quantity is zero. todo remove this call.
    function SetAllMinusButtons() {
        var buttons = document.getElementsByName("minusbutton");
        var i;
        for (i = 0; i < buttons.length; i++) {
            //check current quantity
            var $this = $(buttons[i]);
            var $input = $this.closest('div').find('input');
            var value = parseInt($input.val());
            if (value == 0) {
                buttons[i].disabled = true;
            }
        }
    }


    $(document).ready(function () {
        @*var myObj =  @Html.Raw(Json.Encode(Model));
        MyTestFunc('hello');*@


        modelProducts =  @Html.Raw(Json.Encode(Model.Products));  //store the model cart product list.

        countdownVal = '@ViewBag.remainingTime';


        DisableAllUpdateButtons();
        //SetAllPlusButtons();
        //SetAllMinusButtons();

    });

    function MyTestFunc(string1) {
        console.log(string1);
    }


</script>

@*
    <script>
      $(document).ready(function () {
        $("#btnSave").click(function () {
            $("form").attr("action", "/Customer/Save");
        });
        $("#btnSaveForLatter").click(function () {
            $("form").attr("action", "/Customer/SaveForLater");
        });
        $("#btnSaveAndPublish").click(function () {
            $("form").attr("action", "/Customer/SaveAndPublish");
        });
      });
    </script>


*@


